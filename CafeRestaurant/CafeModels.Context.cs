//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CafeRestaurant
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CafeRestaurantEntities : DbContext
    {
        public CafeRestaurantEntities()
            : base("name=CafeRestaurantEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ORDERSTATUSTYPES> ORDERSTATUSTYPES { get; set; }
        public virtual DbSet<ORDERTYPES> ORDERTYPES { get; set; }
        public virtual DbSet<PRODUCT> PRODUCT { get; set; }
        public virtual DbSet<STOCKTRANSACTION> STOCKTRANSACTION { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<CATEGORY> CATEGORY { get; set; }
        public virtual DbSet<ORDER> ORDER { get; set; }
        public virtual DbSet<ORDERDETAIL> ORDERDETAIL { get; set; }
        public virtual DbSet<PAYMENT> PAYMENT { get; set; }
        public virtual DbSet<PRODUCTSTOCK> PRODUCTSTOCK { get; set; }
        public virtual DbSet<ROLES> ROLES { get; set; }
        public virtual DbSet<USER> USER { get; set; }
        public virtual DbSet<ORDERSVIEW> ORDERSVIEW { get; set; }
    
        public virtual ObjectResult<SP_DAILYTOTALAMOUNT_Result> SP_DAILYTOTALAMOUNT(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DAILYTOTALAMOUNT_Result>("SP_DAILYTOTALAMOUNT", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<SP_MONTHLYTOTALAMOUNT_Result> SP_MONTHLYTOTALAMOUNT(Nullable<int> yEAR)
        {
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MONTHLYTOTALAMOUNT_Result>("SP_MONTHLYTOTALAMOUNT", yEARParameter);
        }
    
        public virtual ObjectResult<SP_DAILYTOTALAMOUNTA_Result> SP_DAILYTOTALAMOUNTA(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DAILYTOTALAMOUNTA_Result>("SP_DAILYTOTALAMOUNTA", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<SP_MONTHLYTOTALAMOUNTA_Result> SP_MONTHLYTOTALAMOUNTA(Nullable<int> yEAR)
        {
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MONTHLYTOTALAMOUNTA_Result>("SP_MONTHLYTOTALAMOUNTA", yEARParameter);
        }
    }
}
